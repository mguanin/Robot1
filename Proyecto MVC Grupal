Modelo:
class robotModel:
    def __init__(self):
        self.elevacion=0
        self.rotacion=0
        self.longitud=0
        self.movimiento=0
    def move_elevation(self,valor):
        self.elevacion+=valor
    def move_rotation(self,valor):
        self.rotacion+=valor
    def move_longitud(self,valor):
        self.longitud+=valor
    def stop_movement(self,valor):
        self.movimiento=False
Vista:
class robotView:
    def oracion(self,mensaje):
        print(mensaje)
        print("")
    def get_user_input(self):
        elevacion=float(input("ingrese la elevacion "))
        rotacion=float(input("ingrese el giro "))
        longitud=float(input("ingrese la longuitud "))
        return elevacion,rotacion,longitud
    def mostrarValores(self,elevacion,rotacion,longitud,movimiento):
        print("")
        print(f"la elevacion es {elevacion}")
        print(f"el giro  es {rotacion}")
        print(f"la longitud es {longitud}")
        if movimiento==True:
            print("el robot se esta moviendo ")
        else:
            print("el robot esta apagado")
Controlador:
class robotController:
    def __init__(self,modelo,vista):
        self.modelo=modelo
        self.vista=vista
    def compilar(self):
        while True:
            print("")
            print("robot encendido ")
            self.vista.oracion("""1. Mover ; 2. Detener; 3. salir""")
            self.vista.oracion("ingrese comando")
            c=int(input())
            if(c==1):
                self.mover()
            elif c==2:
                print("")
                print("robot deteniddo")
                print("")
            elif c==3:
                break
            else:
                print("")
                print("Actividad no valida")
                print("")

    def mover(self):
        longitud,rotacion,elevacion=self.vista.get_user_input()
        self.modelo.move_elevation(elevacion)
        self.modelo.move_rotation(rotacion)
        self.modelo.move_longitud(longitud)
        self.modelo.movimiento=True
        self.vista.mostrarValores(self.modelo.elevacion,self.modelo.rotacion,self.modelo.longitud,self.modelo.movimiento)
Ejecucion:
from model import robotModel
from view import robotView
from controller import robotController

modelo=robotModel()
vista=robotView()
controlador=robotController(modelo,vista)

controlador.compilar()
